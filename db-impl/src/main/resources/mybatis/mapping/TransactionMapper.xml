<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.db.dao.impl.mybatis.mapper.TransactionMapper">
    <resultMap id="BaseResultMap" type="io.nuls.db.entity.TransactionPo">
        <id column="hash" jdbcType="VARCHAR" property="hash" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="tx_index" jdbcType="INTEGER" property="txIndex" />
        <result column="block_height" jdbcType="BIGINT" property="blockHeight" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="fee" jdbcType="BIGINT" property="fee" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="txData" jdbcType="VARBINARY" property="txData" />
        <result column="sign" jdbcType="VARBINARY" property="sign" />
    </resultMap>

    <sql id="Base_Column_List">
        hash, type, tx_index, block_height, create_time, fee, remark, txData, sign
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from transaction
        where hash = #{hash,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from transaction
        where hash = #{hash,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="io.nuls.db.entity.TransactionPo">
        insert into transaction (hash, type, tx_index,
        block_height, create_time, fee,
        remark, txData, sign
        )
        values (#{hash,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{txIndex,jdbcType=INTEGER},
        #{blockHeight,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{fee,jdbcType=BIGINT},
        #{remark,jdbcType=VARCHAR}, #{txData,jdbcType=VARBINARY}, #{sign,jdbcType=VARBINARY}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="io.nuls.db.entity.TransactionPo">
       update transaction
        set type = #{type,jdbcType=INTEGER},
        tx_index = #{txIndex,jdbcType=INTEGER},
        block_height = #{blockHeight,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=BIGINT},
        fee = #{fee,jdbcType=BIGINT},
        remark = #{remark,jdbcType=VARCHAR},
        txData = #{txData,jdbcType=VARBINARY},
        sign = #{sign,jdbcType=VARBINARY}
        where hash = #{hash,jdbcType=VARCHAR}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into transaction (hash, type, tx_index,
        block_height, create_time, fee,
        remark, txData, sign
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.hash,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, #{item.txIndex,jdbcType=INTEGER},
            #{item.blockHeight,jdbcType=BIGINT}, #{item.createTime,jdbcType=BIGINT}, #{item.fee,jdbcType=BIGINT},
            #{item.remark,jdbcType=VARCHAR}, #{item.txData,jdbcType=VARBINARY}, #{item.sign,jdbcType=VARBINARY})
        </foreach>
    </insert>

    <select id="countAll" resultType="java.lang.Long">
        select count(hash) from transaction
    </select>

    <select id="selectList" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from transaction
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
    <select id="selectCount" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultType="java.lang.Long">
        select count(hash) from transaction
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>

    <select id="selectByAddress" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="BaseResultMap">
        select b.*
        from tx_account_relation a
        join `transaction` b on a.tx_hash = b.`hash`
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
</mapper>