<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.db.dao.impl.mybatis.mapper.SubChainMapper">
    <resultMap id="BaseResultMap" type="io.nuls.db.entity.SubChainPo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="creator_address" jdbcType="VARCHAR" property="creatorAddress"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="g_block_hash" jdbcType="VARCHAR" property="gBlockHash"/>
        <result column="g_merkle_hash" jdbcType="VARCHAR" property="gMerkleHash"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="g_block" jdbcType="VARBINARY" property="gBlock"/>
        <result column="g_block_header" jdbcType="VARBINARY" property="gBlockHeader"/>
        <result column="sign" jdbcType="VARBINARY" property="sign"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, creator_address, tx_hash, g_block_hash, g_merkle_hash, title, g_block, g_block_header, sign
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sub_chain
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from sub_chain
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="io.nuls.db.entity.SubChainPo">
        insert into sub_chain (id, creator_address, tx_hash,
        g_block_hash, g_merkle_hash, title,
        g_block, g_block_header, sign
        )
        values (#{id,jdbcType=VARCHAR}, #{creatorAddress,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
        #{gBlockHash,jdbcType=VARCHAR}, #{gMerkleHash,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
        #{gBlock,jdbcType=VARBINARY}, #{gBlockHeader,jdbcType=VARBINARY}, #{sign,jdbcType=VARBINARY}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="io.nuls.db.entity.SubChainPo">
      update sub_chain
        set creator_address = #{creatorAddress,jdbcType=VARCHAR},
        tx_hash = #{txHash,jdbcType=VARCHAR},
        g_block_hash = #{gBlockHash,jdbcType=VARCHAR},
        g_merkle_hash = #{gMerkleHash,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        g_block = #{gBlock,jdbcType=VARBINARY},
        g_block_header = #{gBlockHeader,jdbcType=VARBINARY},
        sign = #{sign,jdbcType=VARBINARY}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into sub_chain (id, creator_address, tx_hash,
        g_block_hash, g_merkle_hash, title,
        g_block, g_block_header, sign )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.creatorAddress,jdbcType=VARCHAR}, #{item.txHash,jdbcType=VARCHAR},
            #{item.gBlockHash,jdbcType=VARCHAR}, #{item.gMerkleHash,jdbcType=VARCHAR}, #{item.title,jdbcType=VARCHAR},
            #{item.gBlock,jdbcType=VARBINARY}, #{item.gBlockHeader,jdbcType=VARBINARY}, #{item.sign,jdbcType=VARBINARY} )
        </foreach>
    </insert>

    <select id="countAll" resultType="java.lang.Long">
        select count(id) from sub_chain
    </select>
    <select id="selectList" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sub_chain
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
    <select id="selectCount" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultType="java.lang.Long">
        select count(id) from sub_chain
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
</mapper>