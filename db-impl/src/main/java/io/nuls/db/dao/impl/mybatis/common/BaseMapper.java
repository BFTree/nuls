package io.nuls.db.dao.impl.mybatis.common;


import io.nuls.db.dao.impl.mybatis.util.Searchable;

import java.io.Serializable;
import java.util.List;


/**
 * mybatis基础查询类，封装了对象的基本查询方法,
 * 以下方法sql实现方式，都需自行写在mapper.xml里
 * @author zhouwei
 *
 */
public interface BaseMapper<K extends Serializable, V> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(K key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int insert(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int insertSelective(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    V selectByPrimaryKey(K key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(V record);

    int batchInsert(List<V> records);
    Long countAll();
    List<V> selectList(Searchable searchable);
    long selectCount(Searchable searchable);

//    int existsByKey(K id);
//
//    int updateBySearchable(Searchable searchable);
//
//    int deleteBySearchable(Searchable searchable);
//
//    V selectBySearchable(Searchable searchable);
//
//
//    long existsBySearchable(Searchable searchable);

}
